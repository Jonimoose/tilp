dnl Process this file with autoconf to produce a configure script.

# requires autoconf
AC_PREREQ(2.52)

# init autoconf
AC_INIT(src/tilp_main.c)

# set program version number
VERSION=6.69
PACKAGE=tilp
AC_SUBST(VERSION)
AC_SUBST(PACKAGE)

# specify a config file
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_MAINTAINER_MODE

AM_CONFIG_HEADER(config.h)

# determine the system type
dnl AC_CANONICAL_SYSTEM
# determine the host type
AC_CANONICAL_HOST

# change the default prefix (/usr/local) to /usr
AC_PREFIX_DEFAULT('/usr')

# build time sanity check...
AM_SANITY_CHECK

# Just for fun :)
echo -n "checking for something to drink while compiling..."
echo " err: no fridge found"

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_MAKE_SET
AC_PROG_LN_S
AC_ISC_POSIX
AC_PROG_AWK

# find pkg-config
AC_PATH_PROG(PKG_CONFIG, pkg-config, no)
if test x$PKG_CONFIG = xno ; then
  AC_MSG_ERROR([*** pkg-config not found. See http://www.freedesktop.org/software/pkgconfig/])
fi

# check for ticables presence
PKG_CHECK_MODULES(TICABLES, ticables >= 3.7.1)
AC_SUBST(TICABLES_CFLAGS)
AC_SUBST(TICABLES_LIBS)

# check for tifiles presence
PKG_CHECK_MODULES(TIFILES, tifiles >= 0.5.5)
AC_SUBST(TIFILES_CFLAGS)
AC_SUBST(TIFILES_LIBS)

# check for ticalcs presence
PKG_CHECK_MODULES(TICALCS, ticalcs >= 4.5.2)
AC_SUBST(TICALCS_CFLAGS)
AC_SUBST(TICALCS_LIBS)

# check for glib presence
PKG_CHECK_MODULES(GLIB, glib-2.0 >= 2.0.0)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

# check for gtk presence
PKG_CHECK_MODULES(GTK, gtk+-2.0 >= 2.0.0)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

# check for libglade presence
PKG_CHECK_MODULES(GTK, libglade-2.0 >= 1.99.0)
AC_SUBST(GTK_CFLAGS)
AC_SUBST(GTK_LIBS)

CFLAGS="$CFLAGS $TICABLES_CFLAGS $TIFILES_CFLAGS $TICALCS_CFLAGS $GLIB_CFLAGS $GTK_CFLAGS"
LDFLAGS="$LDFLAGS $TICABLES_LIBS $TIFILES_LIBS $TICALCS_LIBS $GLIB_LIBS $GTK_LIBS"

# checks for libraries.
AC_CHECK_LIB(dl, dlopen)
AC_CHECK_LIB(m, pow)
AC_CHECK_LIB(jpeg, jpeg_std_error)

# checks for header files.
AC_PATH_X
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_STAT
AC_CHECK_HEADERS(strings.h unistd.h malloc.h sys/file.h fcntl.h direct.h alloca.h errno.h sys/time.h utime.h sys/param.h)
AC_CHECK_HEADERS(stdint.h)
AC_CHECK_HEADERS(locale.h libintl.h)
AC_CHECK_HEADER(jpeglib.h)
AC_CHECK_MEMBERS(struct stat.st_blksize)

# checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_TYPE_SIGNAL
AC_FUNC_ERROR_AT_LINE
AC_HEADER_MAJOR
AC_STRUCT_TM

# checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_VPRINTF
AC_FUNC_MALLOC
AC_FUNC_STAT
AC_CHECK_FUNCS(getcwd mkdir strstr strtol dup2 getwd memchr memset strrchr pow setlocale strcasecmp strchr)

# Win32 stuffs
AC_MSG_CHECKING([for Win32])
case "$host" in
  *-*-mingw*)   tilp_native_win32=yes ;;
  *-*-cygwin)   tilp_native_win32=yes ;;
  *)            tilp_native_win32=no  ;;
esac
AC_MSG_RESULT([$tilp_native_win32])
AM_CONDITIONAL(OS_WIN32, test "$tilp_native_win32" = "yes")

# Ensure MSVC-compatible struct packing convention is used when
# compiling for Win32 with gcc.
# What flag to depends on gcc version: gcc3 uses "-mms-bitfields", while
# gcc2 uses "-fnative-struct".
if test x"$tilp_native_win32" = xyes; then
  if test x"$GCC" = xyes; then
    msnative_struct=''
    AC_MSG_CHECKING([how to get MSVC-compatible struct packing])
    if test -z "$ac_cv_prog_CC"; then
      our_gcc="$CC"
    else
      our_gcc="$ac_cv_prog_CC"
    fi
    case `$our_gcc --version | sed -e 's,\..*,.,' -e q` in
      2.)
        if $our_gcc -v --help 2>/dev/null | grep fnative-struct >/dev/null; then
          msnative_struct='-fnative-struct'
        fi
        ;;
      *)
        if $our_gcc -v --help 2>/dev/null | grep ms-bitfields >/dev/null; then
          msnative_struct='-mms-bitfields'
        fi
        ;;
    esac
    if test x"$msnative_struct" = x ; then
      AC_MSG_RESULT([no way])
      AC_MSG_WARN([produced libraries might be incompatible with MSVC-compiled code])
    else
      CFLAGS="$CFLAGS $msnative_struct"
      AC_MSG_RESULT([${msnative_struct}])
    fi
  fi
fi

#AC_CYGWIN32
AC_MINGW32
AC_EXEEXT

case $host in
  *-*-mingw*) ARCH="-D__WIN32__ -D__MINGW32__ -Os -s" ;;
  *-*-cygwin) ARCH="-D__WIN32__ -D__CYGWIN__ -mno-cygwin" ;;
  *-*-*bsd*)  ARCH="-D__BSD__" ;;
  *)          ARCH="-D__LINUX__" ;;
esac

# initialize libtool
AM_DISABLE_STATIC
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL
AC_PROG_LIBTOOL

# pass some variables to  plugins
tilp_plugin_dir=$libdir/$PACKAGE
AC_SUBST(tilp_plugin_dir)
tilp_help_dir=$datadir/$PACKAGE/help
AC_SUBST(tilp_help_dir)
tilp_pixmap_dir=$datadir/$PACKAGE/pixmaps
AC_SUBST(tilp_pixmap_dir)
tilp_icon_dir=$datadir/$PACKAGE/icons
AC_SUBST(tilp_icon_dir)
tilp_glade_dir=$datadir/$PACKAGE/glade
AC_SUBST(tilp_glade_dir)

# exit HOME dir facility
AC_ARG_ENABLE(exit_homedir, [  --enable-exit-homedir        allow user to exit home dir [default=no]],,enable_exit_homedir=no)

AC_MSG_CHECKING(whether authorizing user to go outside the HOME dir)
if test "x$enable_exit_homedir" = "xyes"; then
  AC_DEFINE(ALLOW_EXIT_HOMEDIR, 1, [Whether allowing user to exit HOME dir])
  AC_SUBST(ALLOW_EXIT_HOMEDIR)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

# gettext support
ALL_LINGUAS="fr de"
AM_GNU_GETTEXT

locale_dir='${prefix}/share/locale'
AC_SUBST(locale_dir)

# some extra flags
CFLAGS="$CFLAGS $ARCH -Wall"
LDFLAGS="$LDFLAGS $INTLLIBS -g"

# pass flags
AC_SUBST(CFLAGS)
AC_SUBST(LDFLAGS)

AC_OUTPUT([Makefile
glade/Makefile
help/Makefile
icons/Makefile
man/Makefile
misc/Makefile
pixmaps/Makefile
registry/Makefile
src/Makefile
win32/Makefile
plugins/Makefile
plugins/test/Makefile
plugins/nv82/Makefile
plugins/gfv/Makefile
tilp.lsm
tilp.spec
intl/Makefile
po/Makefile.in
])

if test "x$enable_exit_homedir" = "xno"; then
 echo ;
 echo "If you are a single user and you want to move in your filesystem, " ;
 echo "you can choose to add the '--enable-exit-homedir' option on the" ; 
 echo 'configure'" command line." ;
 echo "By default, it is disabled for security reasons !" ;
else
 echo ;
 echo "You have enabled the 'exit HOME dir' mode. Please keep in mind that " ;
 echo "it's not secure..." ;
fi

echo ;









